<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Document</title>
  <style>
 
  </style>
</head>
<body>
  <h1>Function Expression</h1>
  <blockquote>
  <pre>
    # Function Expressions

    In this exercise, you will be writing some functions and function expressions, to manage the student enrollment records for a workshop.
    
    **Note:** The spirit of this exercise is to use functions wherever possible and appropriate, so consider usage of array utilities `map(..)`, `find(..)`, `sort(..)`, and `forEach(..)`.
    
    ## Instructions (Part 1)
    
    **Note:** In Part 1, use only function declarations or named function expressions.
    
    You are provided onefunctions stubs -- `printRecords(..)` -- which you must define.
    
    At the bottom of the file you will see these functions called, and a code comment indicating what the console output should be.
    
    1. `printRecords(..)` should:
      - take a list of student Ids
      - retrieve each student record by its student Id (hint: array `find(..)`)
      - sort by student name, ascending (hint: array `sort(..)`)
      - print each record to the console, including `name`, `id`, and `"Paid"` or `"Not Paid"` based on their paid status
      
      ## Instructions (Part 2)
    
    Now that you've completed Part 1, refactor to use **only** `=>` arrow functions.
    
    For `printRecords(..)`,assign these arrow functions to variables of such names, so that the execution still works.
    
    As the appeal of `=>` arrow functions is their conciseness, wherever possible try to use only expression bodies (`x => x.id`) instead of full function bodies (`x => { return x.id; }`).
  </pre>
</blockquote>
<hr>
<h1>Test Cases - take the starter code </h1>
<pre>
<code>
    function printRecords(recordIds) {
      // TODO
    }
    
    
    
    
    
    // ********************************
    
    var currentEnrollment = [ 410, 105, 664, 375 ];
    
    var studentRecords = [
      { id: 313, name: "Frank", paid: true, },
      { id: 410, name: "Suzy", paid: true, },
      { id: 709, name: "Brian", paid: false, },
      { id: 105, name: "Henry", paid: false, },
      { id: 502, name: "Mary", paid: true, },
      { id: 664, name: "Bob", paid: false, },
      { id: 250, name: "Peter", paid: true, },
      { id: 375, name: "Sarah", paid: true, },
      { id: 867, name: "Greg", paid: false, },
    ];
    
    printRecords(currentEnrollment);
    console.log("----");
    
    //OUTPUT as below 
    /*
      Bob (664): Not Paid
      Henry (105): Not Paid
      Sarah (375): Paid
      Suzy (410): Paid
      ----
      */
</code>
</pre>
</body>
</html>